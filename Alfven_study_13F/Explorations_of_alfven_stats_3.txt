09/18/2014
Professor LaBelle and I had a meeting yesterday, during which several holes in my understanding of alfven_stats_3.pro were brought to the forefront. These included

*How current intervals are defined
     *Which component of B?

*How does smoothing take place? If data are jumpy this could seriously affect the number of current intervals defined
     *As a headcheck, we are able to compare anything we produce with Chris' database that we currently have available to us
     09/19/2014 09:15am:
       Yes, I have now done a comparison between (1) dflux_10000_0 [provided by Chris], (2) Dartmouth_dflux_10000_0, and
       (3) Dartmouth_dflux_10000_0_NOSMOOTH. The stats are located in Explorations_of_Alfven_Stats_3.ods.

*Is our loss cone calculation OK?
    *This will primarily be decided based on the availability of IDL routines in the IGRF package
    	  *Answer this: can my loss_cone_width.pro be replaced with something better/more thorough in the IGRF package?


*To which IDL routines do we not have access? These are likely written by Chris
    *Before contacting Chris or Jack Vernetti, get a COMPLETE list of these
        1. get_2dt_ts_pot (see line ~386, or search for 'if keyword_set(burst) then begin')
     	   CURRENT SOLUTION: Commented out
        2. smooth (see line 15, or search for 'magz.y=smooth(magz.y,40)')
	   *Consider using ff_smooth, which has usage syntax that matches the way Chris uses 'smooth'
	   **Note, however, that Chris calls 'smooth' where 40 points are to be used, but ff_smooth says
	   **the number of smoothing points must be ODD
	   CURRENT SOLUTION: Commented out
	   09/18/2014 5:31pm:
     	     BUT WAIT! It looks like 'smooth' works just fine... I just uncommented it and it went off without a hitch
	   09/19/2014 8:45am:
	     Yes, IDL has a pre-packaged 'smooth' routine: 'The SMOOTH function returns a copy of Array smoothed 
	     with a boxcar average of the specified width.'. 
	     Now I'm just not sure why the line mentioned above was commented out...
	3. alfven_speed_mlt (Used at line 963, as follows)
                            ;e over b test
			    va=1000.0*alfven_speed_mlt(current_intervals(j,21),current_intervals(j,22))
			    e_over_b=(1.0e-3*current_intervals(j,18))/(current_intervals(j,17)*1.0e-9)
			    if e_over_b/va LT 1.0/eb_to_alfven_speed then current_intervals(j,3)=0.0
           CURRENT SOLUTION: Commented out		
 
